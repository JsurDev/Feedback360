@{
    var cliente = Session["Cliente"] as CapaEntidad.Cliente; //Aqui se obtiene el cliente de la sesion
}
@{
    ViewBag.Title = "QuejaSugerencia";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    table {
        table-layout: auto;
        width: 100%;
    }
    .auto-width {
        white-space: nowrap;
        width: 1%;
    }
    .comentarios-columna {
        max-width: 250px;
        white-space: normal !important;
        word-wrap: break-word;
        word-break: break-word;
    }
    .card-body {
        overflow-x: auto;
    }
</style>
<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Solicitudes</a></li>
    <li class="breadcrumb-item active">Solicitudes</li>
</ol>

<div class="card">
    <div class="card-header">
        <i class="fa-solid fa-gavel"></i>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal()">Nuevo Solicitud</button>
            </div>
        </div>
        <hr /> @*Linea divisoria*@

        <!-- Contenedor para mostrar la referencia de la solicitud -->
        <div id="alert-container"></div>

        <!-- COMIENZA LA TABLA-->
        <table id="tSolicitud" class="display cell-border" style="width:100%">
            @*Inicia la tabla*@
            <thead>
                <tr>
                    <th class="auto-width">Id Solicitud</th>
                    <th class="auto-width">Id Cliente</th>
                    <th class="auto-width">Categoria</th>
                    @*<th>Asignado a</th>*@
                    <th>Estado</th>
                    <th class="comentarios-columna">Comentarios</th>
                    <th class="auto-width">Nombre</th>
                    <th class="auto-width">Apellido</th>
                    <th class="auto-width">Email</th>
                    <th class="auto-width">Telefono</th>
                    <th>Referencia</th>
                    <th>Estatus</th>
                    <th>Respuesta</th>
                    <th class="auto-width">Opciones</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                </tr>
            </tbody>
        </table> @*Termina la tabla*@
    </div>
</div>
@*Modal para crear un nuevo cliente*@
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        @*agregue "modal-xl" para que sea mas largo y se vea mas presentable*@
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel"> Solicitud </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!---->
            <div class="modal-body">
                <form id="formSolicitud">
                    <!-- Aquí comienza el formulario -->

                    <div class="row">
                        <div class="col-6">
                            <label for="lblId" class="form-label">Id Solicitud</label>
                            <input type="text" class="form-control" id="txtId" style="background-color: #f0f0f0; border: 1px solid #ccc; color: #6c757d;" readonly />
                        </div>
                        <div class="col-6">
                            <label for="lblIdCliente" class="form-label">Id Cliente</label>
                            <input type="text" class="form-control" name="IdCustomer" id="txtIdCliente" placeholder="Ingrese un Id" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblNombres" class="form-label">Nombre</label>
                            <input type="text" class="form-control" id="txtNombres" placeholder="Digite un Nombre" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblApellidos" class="form-label">Apellidos</label>
                            <input type="text" class="form-control" id="txtApellidos" placeholder="Digite un Apellido" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEmail" class="form-label">Correo Electronico</label>
                            <input type="text" class="form-control" id="txtEmail" placeholder="correo@ejemplo.com" required readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblTelefono" class="form-label">Telefono</label>
                            <input type="text" class="form-control" id="txtTelefono" placeholder="Ej: 22222222" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblCategoria" class="form-label">Categoria</label>
                            <select id="cboCategoria" class="form-select">
                            </select>
                        </div>
                        <div class="col-sm-6" hidden>
                            <label for="lblAsignado" class="form-label" >Asignado a</label>
                            <select id="cboAsignado" class="form-select">
                                <option value="" disabled selected>Seleccione un usuario</option>
                            </select>
                        </div>
                        <div class="col-sm-6" hidden>
                            <label for="lblEstado" class="form-label" >Estado Actual</label>
                            <select id="cboEstado" class="form-select">
                                <option value="" disabled selected>Seleccione un usuario</option>
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEstatus" class="form-label">Estado</label>
                            <select id="cbEstatus" class="form-select" disabled>
                                <option selected>Selecciona una Opcion</option>
                                <option value="1">Activo</option>
                                <option value="0">Inactivo</option>
                            </select>
                        </div>
                        <div class="col-12"> @*NO PUDE HACER QUE OCUPE TODO EL ESPACIO DISPINIBLE*@
                            <label for="txtComentario" class="form-label">Comentarios</label>
                            <textarea class="form-control w-100" id="txtComentario" placeholder="Comentarios" rows="3" style="resize: none;" maxlength="100" oninput="actualizarContador()"></textarea>
                            <small id="contador" class="form-text text-muted">10 caracteres restantes</small>
                        </div>

                        <div class="col-12">@*NO PUDE HACER QUE OCUPE TODO EL ESPACIO DISPINIBLE*@
                            <label for="txtRespuesta" class="form-label">Respuesta</label>
                            <textarea class="form-control w-100" disabled id="txtRespuesta" placeholder="Comentarios" rows="3" style="resize: none;"></textarea>
                            <small class="form-text text-muted"></small>
                        </div>
                        <div class="col-sm-6">
                            <label for="lblReferencia" class="form-label">Referencia</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="txtReferencia" placeholder="Referencia" readonly style="background-color: #f0f0f0; border: 1px solid #ccc; color: #6c757d;" />
                                <span class="input-group-text" id="basic-addon2"><i class="fas fa-lock"></i></span>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeError" class="alert alert-danger" role="alert" style="display: none;">
                                    Alerta!
                                </div>
                            </div>
                        </div>
                    </div>
                </form> @*termina el formulario*@
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" id="btnGuardar" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        var tabladata;
       //Cargamos los Datos en la TABLA
       tabladata = $("#tSolicitud").DataTable({
       responsive: true,
       ordering: false,
       "ajax": {
       url: '@Url.Action("ListarSolicitud", "Tienda")',
       type: "GET",
       dataType: "json"
            },
           "columns": [
               { "data": "IdSolicitud" },
               { "data": "IdCliente" },
               { "data": "oCategoria.Tipo" },
               //{ "data": "oUsuario.Nombre" },
               {
                   "data": "oEstado.EstadoActual",
                   "render": function (valor) {
                       valor = valor.trim().toLowerCase(); // normaliza

                       switch (valor) {
                           case "recibida":
                               return '<span class="badge" style="background-color: #0dcaf0; color: white;font-size: 14px;">Recibida</span>'; // azul cielo
                           case "en revision":
                               return '<span class="badge" style="background-color: #17a2b8; color: white;font-size: 14px;">En Revisión</span>'; // azul petróleo
                           case "pendiente de informacion":
                               return '<span class="badge" style="background-color: #ffc107; color: #212529;font-size: 14px;">Pendiente de Información</span>'; // amarillo profesional
                           case "en proceso":
                               return '<span class="badge" style="background-color: #007bff; color: white;font-size: 14px;">En Proceso</span>'; // azul fuerte
                           case "resuelta":
                               return '<span class="badge" style="background-color: #28a745; color: white;font-size: 14px;">Resuelta</span>'; // verde éxito
                           case "cerrada":
                               return '<span class="badge" style="background-color: #6c757d; color: white;font-size: 14px;">Cerrada</span>'; // gris oscuro
                           case "rechazada":
                               return '<span class="badge" style="background-color: #dc3545; color: white;font-size: 14px;">Rechazada</span>'; // rojo profesional
                           default:
                               return '<span class="badge" style="background-color: #adb5bd; color: white;font-size: 14px;">Desconocido</span>'; // gris neutro
                       }
                   }
               },
               { "data": "Comentario" },
               { "data": "Nombre" },
               { "data": "Apellido" },
               { "data": "Email" },
               { "data": "Telefono" },
               { "data": "Referencia" },
               {
                   "data": "Estatus", "render": function (valor) {
                       if (valor) {
                           return '<span class="badge bg-success">Activo</span>';
                       } else {
                           return '<span class="badge bg-danger">Inactivo</span>';
                       }
                   }
               },
               { "data":"Respuesta" },
               {
                   "defaultContent":
                       '<button type="button" class="btn btn-outline-success btn-sm btn-editar"><i class="fas fa-marker"></i></button>',
                   "orderable": false,
                   "searchable": false,
                   "width": "50px"
               }
           ],
           "language": {
         "url": "https://cdn.datatables.net/plug-ins/2.2.2/i18n/es-ES.json"
    }
       }); //Termina la tabla

                   //LLAMAMOS LAS CATEGORIAS para crear la SOLICITUD
            jQuery.ajax({
            url: '@Url.Action("ListarCategorias", "Tienda")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccione una opcion ").appendTo("#cboCategoria");
                $.each(data.data, function (index, item) {
                    $("<option>").attr({ "value": item.IdCategoria }).text(item.Tipo).appendTo("#cboCategoria");
                })
            },
            error: function (error) {
                console.log(error)
            }
            });

            //LLAMAMOS A LOS USUARIOS internos del sistema
            jQuery.ajax({
            url: '@Url.Action("ListarUsuarios", "Tienda")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccione una opcion ").appendTo("#cboAsignado");
                $.each(data.data, function (index, item) {
                    $("<option>").attr({ "value": item.IdUsuario }).text(item.Nombre).appendTo("#cboAsignado");
                })
            },
            error: function (error) {
                console.log(error)
            }
            });

            //LLAMAMOS A LOS ESTADOS DE LA SOLICITUD
            jQuery.ajax({
            url: '@Url.Action("ListarEstados", "Tienda")',
            type: "GET",
            data: null,
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data) {
                $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccione una opcion ").appendTo("#cboEstado");
                $.each(data.data, function (index, item) {
                    $("<option>").attr({ "value": item.IdEstado }).text(item.EstadoActual).appendTo("#cboEstado");
                })
            },
            error: function (error) {
                console.log(error)
            }
            });

        //function abrirModal(jsonData)
        //{
        //    $("#txtId").val("");
        //    $("#txtIdCliente").val("");
        //    $("#cboCategoria").val($("#cboCategoria option:first").val());
        //    $("#cboAsignado").val($("#cboAsignado option:first").val());
        //    $("#cboEstado").val($("#cboEstado option:first").val());
        //    $("#txtComentario").val("");
        //    $("#txtNombres").val("");
        //    $("#txtApellidos").val("");
        //    $("#txtEmail").val("");
        //    $("#txtTelefono").val("");
        //    $("#txtReferencia").val("");
        //    $("#cbEstatus").val(1);
        //    $("#mensajeError").hide();

        //    if (jsonData != null) {
        //        $("#txtId").val(jsonData.IdSolicitud); // corregido
        //        $("#txtIdCliente").val(jsonData.IdCliente).prop("disabled", true);
        //        $("#cboCategoria").val(jsonData.oCategoria.IdCategoria).prop("disabled", true);
        //        $("#cboAsignado").val(jsonData.oUsuario.IdUsuario).prop("disabled", true);
        //        $("#cboEstado").val(jsonData.oEstado.IdEstado).prop("disabled", true);
        //        $("#txtComentario").val(jsonData.Comentario).prop("readonly", true).prop("disabled", true);
        //        $("#txtNombres").val(jsonData.Nombre).prop("readonly", true); // no editable
        //        $("#txtApellidos").val(jsonData.Apellido).prop("readonly", true);
        //        $("#txtEmail").val(jsonData.Email).prop("readonly", true);
        //        $("#txtTelefono").val(jsonData.Telefono).prop("readonly", true);
        //        $("#txtReferencia").val(jsonData.Referencia);
        //        $("#cbEstatus").val(jsonData.Estatus == true ? 1 : 0).prop("disabled", true);
        //    }
        //    $("#FormModal").modal("show");
        //}//termina abrirModal

        //Abrir MODAL NUEVA SOLICITUD, EDITAR.

        function abrirModal(jsonData) {
    // Limpiar todos los campos
    $("#txtId").val("");
    $("#txtIdCliente").val("");
    $("#cboCategoria").val($("#cboCategoria option:first").val());
    $("#cboAsignado").val($("#cboAsignado option:first").val());
    $("#cboEstado").val($("#cboEstado option:first").val());
    $("#txtComentario").val("").prop("readonly", false).prop("disabled", false);
    $("#txtRespuesta").val("").prop("disabled", true);
    $("#txtNombres").val("").prop("readonly", true);
    $("#txtApellidos").val("").prop("readonly", true);
    $("#txtEmail").val("").prop("readonly", true);
    $("#txtTelefono").val("").prop("readonly", true);
    $("#txtReferencia").val("");
    $("#cbEstatus").val(1).prop("disabled", true);
    $("#mensajeError").hide();

    if (jsonData != null) {
        // Modo ver/editar
        //$("#btnGuardar").prop("disabled", true); Para Ocultar el boton
        $("#txtId").val(jsonData.IdSolicitud);
        $("#txtIdCliente").val(jsonData.IdCliente).prop("disabled", true);
        $("#cboCategoria").val(jsonData.oCategoria.IdCategoria).prop("disabled", true);
        $("#cboAsignado").val(jsonData.oUsuario.IdUsuario).prop("disabled", true);
        $("#cboEstado").val(jsonData.oEstado.IdEstado).prop("disabled", true);
        $("#txtComentario").val(jsonData.Comentario).prop("readonly", true).prop("disabled", true);
        $("#txtNombres").val(jsonData.Nombre);
        $("#txtApellidos").val(jsonData.Apellido);
        $("#txtEmail").val(jsonData.Email);
        $("#txtTelefono").val(jsonData.Telefono);
        $("#txtReferencia").val(jsonData.Referencia);
        $("#txtRespuesta").val(jsonData.Respuesta).prop("disabled",true);
        $("#cbEstatus").val(jsonData.Estatus == true ? 1 : 0).prop("disabled", true);

        $("#FormModal").modal("show");
    } else {
        // Modo nuevo: traer datos del cliente desde el backend
        $.ajax({
            url: '@Url.Action("ObtenerDatosCliente", "Tienda")',
            type: 'GET',
            dataType: 'json',
            success: function (response) {
                if (response.success) {
                    $("#txtIdCliente").val(response.IdCliente);
                    $("#txtNombres").val(response.Nombre);
                    $("#txtApellidos").val(response.Apellido);
                    $("#txtEmail").val(response.Email);
                    $("#txtTelefono").val(response.Telefono);
                    $("#cboAsignado").val();
                    $("#cboEstado").val();
                } else {
                    alert("No se pudo obtener la información del cliente.");
                }
                $("#FormModal").modal("show");
            },
            error: function () {
                alert("Error al obtener los datos del cliente.");
                $("#FormModal").modal("show");
            }
        });
    }
}


        function actualizarContador() {
            var max = 100;
            var actual = document.getElementById('txtComentario').value.length;
            var contador = document.getElementById('contador');
            if (contador) {
                contador.innerText = (max - actual) + " caracteres restantes";
            }
        }

        $("#txtComentario").on("input", actualizarContador);

        $("#FormModal").on("shown.bs.modal", function () {
            actualizarContador();
        });


        ////botone editar
        //$("#tSolicitud tbody").on("click", ".btn-editar", function () {
        //    filaSeleccionada = $(this).closest("tr")
        //    var data = tabladata.row(filaSeleccionada).data();
        //    abrirModal(data)
        //})


        // Declarar variable global al inicio del script
        var filaSeleccionada = null;
        $("#tSolicitud tbody").on("click", ".btn-editar", function () {
            filaSeleccionada = $(this).closest("tr");

            // Si es una fila 'child', obtener la real (la que tiene los datos)
            if (filaSeleccionada.hasClass("child")) {
                filaSeleccionada = filaSeleccionada.prev();
            }

            var data = tabladata.row(filaSeleccionada).data();
            abrirModal(data);
        });


         //para boton eliminar
        $("#tSolicitud tbody").on("click", '.btn-eliminar', function () {
         var filaSeleccionada = $(this).closest("tr")
         var data = tabladata.row(filaSeleccionada).data();
        //pagamos sweet alert
        swal({
            title: "Quieres eliminar la Solicitud?",
            text: "No lo podras recuperar!",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Si,eliminalo!",
            closeOnConfirm: false
        },
            function () {
                jQuery.ajax({
                  url: '@Url.Action("EliminarSolicitud", "Tienda")',
                    type: "POST",
                    data: JSON.stringify({ id: data.IdSolicitud }),
                  dataType: "json",
                  contentType: "application/json; charset=utf-8",
                  success: function (data){
                      if (data.resultado) {
                          tabladata.row(filaSeleccionada).remove().draw();
                          swal("Registro Borrado","La Solicitud fue eliminada con exito","success");
                      } else {
                          swal("Registro no se puede eliminar",data.mensaje,"error");
                      }
                  },
                          error: function (error) {
                              swal("Error en eliminar!", error, "error");
                              console.log(error);
                    },
                });
            });
        }) // Termina el boton eliminar

        //GUARDAR SOLICITUD : Para los objetos que creamos tenemos que hacer como se ve en el ejemplo del "oCategoria"
            function Guardar() {
                var Solicitud = {
                    IdSolicitud: $("#txtId").val(),
                    IdCliente: $("#txtIdCliente").val(),
                    oCategoria: {
                        IdCategoria: $("#cboCategoria option:selected").val(),
                        Tipo: $("#cboCategoria option:selected").text(),
                    },
                    oUsuario: {
                        IdUsuario: $("#cboAsignado option:selected").val(),
                        Nombre: $("#cboAsignado option:selected").text(),
                    },
                    oEstado: {
                        IdEstado: $("#cboEstado option:selected").val(),
                        EstadoActual: $("#cboEstado option:selected").text(),
                    },
                    Comentario: $("#txtComentario").val(),
                    Respuesta: $("#txtRespuesta").val(),
                    Nombre: $("#txtNombres").val(),
                    Apellido: $("#txtApellidos").val(),
                    Email: $("#txtEmail").val(),
                    Telefono: $("#txtTelefono").val(),
                    Referencia: $("#txtReferencia").val(),
                    //Estatus: $("#cbEstatus").val() == "1" ? true : false,
                    Estatus: $("#cbEstatus").val() == 1 ? true : false, //probaremos esta opcion

                };//VERIFICAR QUE ESTE ; SEA NECESARIO

             // VALIDAMOS QUE LOS CAMPOS NO QUEDEN VACIOS
                if (Solicitud.oCategoria.IdCategoria === "0" || Solicitud.oUsuario.IdUsuario === "0" || Solicitud.oEstado.IdEstado === "0" || !Solicitud.Comentario) {
                    $("#mensajeError").text("Por favor completa todos los campos requeridos.").show();
                    return;
                }

                jQuery.ajax({
                url: '@Url.Action("GuardarSolicitud", "Tienda")',
                type: "POST",
                data: JSON.stringify({ obj:Solicitud }), //obj:"
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $(".modal-body").LoadingOverlay("hide");
                    if (Solicitud.IdSolicitud == 0) { // Nueva creación
                        if (data.resultado != 0) {
                            Solicitud.IdSolicitud = data.resultado;
                            //Asignamos la referencia que viene desde el servidor
                            Solicitud.Referencia = data.referencia;
                            tabladata.row.add(Solicitud).draw(false);
                            $("#FormModal").modal("hide"); // Cerrar modal al agregar
                            // Mensaje emergente con la referencia
                            Swal.fire({
                                title: "Registrado",
                                html: "La solicitud fue registrada exitosamente.<br><br><strong>Referencia: </strong>" + Solicitud.Referencia,
                                icon: "success",
                                confirmButtonText: "OK"
                            }).then(() => {
                                // Refrescar la página después del mensaje
                                location.reload();
                            });
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                            Swal.fire("Error", data.mensaje, "error");
                        }
                    }
                    else { // Modificación
                        if (data.resultado) {
                            tabladata.row(filaSeleccionada).data(Solicitud).draw(false);
                            $("#FormModal").modal("hide"); // Cerrar modal al modificar
                            Swal.fire("Modificado", "La solicitud fue modificada correctamente.", "success");
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                            Swal.fire("Error", data.mensaje, "error");
                        }
                    }
                },
                error: function (error) {
                    $(".modal-body").LoadingOverlay("hide");
                    $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
                    $("#mensajeError").show();
                    Swal.fire("Error", "Hubo un problema con la solicitud al servidor.", "error");
                },
                beforeSend: function () {
                    $(".modal-body").LoadingOverlay("show", {
                        imageResizeFactor: 2,
                        text: "Cargando...",
                        size: 14,
                    });
                }
             });
        }
    </script>
}