
@{
    ViewBag.Title = "Estado";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Estado</a></li>
    <li class="breadcrumb-item active">Estado</li>
</ol>
<div class="card">
    <div class="card-header">
        <i class="fa-solid fa-spinner"></i>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal()">Nuevo Estado</button>
                <button type="button" class="btn btn-success" onclick="descarrgarExcel()">Descargar Excel</button>
            </div>
        </div>
        <hr /> @*Linea divisoria*@
        <table id="tEstado" class="display cell-border" style="width:100%">
            @*Inicia la tabla*@
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Estado Actual Solicitud</th>
                    <th>Estado</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table> @*Termina la tabla*@
    </div>
</div>
@*Modal para crear un nuevo cliente*@
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel"> Estado </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!---->
            <div class="modal-body">
                <form id="formEstado" class="row">
                    <input id="txtid" type="hidden" value="0" /> @*usuario en CERO para nuevo perfiles*@
                    <div class="row g-2">

                        <div class="col-6">
                            <label for="lblIdEstado" class="form-label">Id </label>
                            <input type="text" class="form-control" id="txtIdEstado" style="background-color: #f0f0f0; border: 1px solid #ccc; color: #6c757d;" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEstadoActual" class="form-label">Estado Actual</label>
                            <input type="text" class="form-control" name="nombre" id="txtEstadoActual" placeholder="Digite un Nuevo Estado" />
                        </div>

                        <div class="col-sm-6">
                            <label for="lblEstado" class="form-label">Estado</label>
                            <select id="cbEstatus" class="form-select">
                                <option selected>Selecciona una Opcion</option>
                                <option value="1">Activo</option>
                                <option value="0">Inactivo</option>
                            </select>
                        </div>

                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeError" class="alert alert-danger" role="alert" style="display: none;">
                                    Alerta!
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        //DESCARGAR EXCEL ESTADOS DE SOLICITUD
        function descargarExcel() {
            window.location.href='@Url.Action("ExportarEstadoSolicitud","Mantenimientos")'
        }//termina la funcion de descargar excel

        var filaSeleccionada;
       var tabladata = $("#tEstado").DataTable({
       responsive: true,
       ordering: false,
       "ajax": {
       url: '@Url.Action("ListarEstados", "Mantenimientos")',
       type: "GET",
       dataType: "json"
            },
           "columns": [
               { "data": "IdEstado" },
               { "data": "EstadoActual" },
               {
                   "data": "Estatus", "render": function (valor) {
                       if (valor) {
                           return '<span class="badge bg-success">Activo</span>'
                       } else {
                           return '<span class="badge bg-danger">Inactivo</span>'
                       }
                   }
               },
               {
                   "defaultContent":
                       '<button type="button" class="btn btn-outline-success btn-sm btn-editar"><i class="fas fa-marker"></i></button>' + ' ' +
                       '<button type="button" class="btn btn-outline-danger btn-sm sm-2 btn-eliminar"><i class="fas fa-trash"></i></button>',
                   "orderable": false,
                   "searchable": false,
                   "width": "50px"
               }
           ],

     "language": {
        "url": "https://cdn.datatables.net/plug-ins/2.2.2/i18n/es-ES.json"
    }
       });

        // Agregando método personalizado para regex
        $.validator.addMethod("letrasSinEspacios", function (value, element) {
            return this.optional(element) || /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/.test(value);
        }, "Ingrese solo letras sin espacios ni caracteres especiales.");

        // Validación del formulario
        $("#formEstado").validate({
            rules: {
                nombre: {
                    required: true,
                    letrasSinEspacios: true
                },
                cbEstatus: {
                    required: true
                }
            },
            messages: {
                nombre: "- Por favor ingrese un nombre de Estado válido (solo letras, sin espacios)",
                cbEstatus: "- Por favor seleccione un estado"
            },
            errorElement: "div",
            errorLabelContainer: ".alert-danger"
        }); //Terminamos toda la validacion

        function abrirModal(jsonData) {
            $("#txtIdEstado").val("");
            $("#txtEstadoActual").val("");
            $("#cbEstatus").val(1);
            $("#mensajeError").hide();

            if (jsonData != null) {
                $("#txtIdEstado").val(jsonData.IdEstado)
                $("#txtEstadoActual").val(jsonData.EstadoActual)//PENDIENTE DE REVISAR FUNCIONAMIENTO.
                $("#cbEstatus").val(jsonData.Estatus == true ? 1 : 0)
            }
            $("#FormModal").modal("show");
        }
        //botone editar
        //$("#tEstado tbody").on("click", ".btn-editar", function () {
        //    filaSeleccionada = $(this).closest("tr")
        //    var data = tabladata.row(filaSeleccionada).data();
        //    abrirModal(data)
        //})

        // Declarar variable global al inicio del script
        var filaSeleccionada = null;

        $("#tEstado tbody").on("click", ".btn-editar", function () {
            filaSeleccionada = $(this).closest("tr");

            // Si es una fila 'child', obtener la real (la que tiene los datos)
            if (filaSeleccionada.hasClass("child")) {
                filaSeleccionada = filaSeleccionada.prev();
            }

            var data = tabladata.row(filaSeleccionada).data();
            abrirModal(data);
        });


        //Boton eliminar
        $("#tEstado tbody").on("click", ".btn-eliminar", function () {
          var estadoSeleccionado = $(this).closest("tr")
          var data = tabladata.row(estadoSeleccionado).data();
          //pagamos sweet alert
          swal({
              title: "Quieres eliminar el registro de Estado?",
              text: "No lo podras recuperar!",
              type: "warning",
              showCancelButton: true,
              confirmButtonClass: "btn-danger",
              confirmButtonText: "Si,eliminalo!",
              closeOnConfirm: false
          },

                      function () {
          jQuery.ajax({
            url: '@Url.Action("EliminarEstado", "Mantenimientos")',
              type: "POST",
              data: JSON.stringify({ id: data.IdEstado }),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            success: function (data)
            {
                if (data.resultado) {
                    tabladata.row(estadoSeleccionado).remove().draw();
                    swal("Registro Borrado","El Estado fue eliminado con exito","success");
                } else {
                    swal("Registro no se puede eliminar",data.mensaje,"error");
                }
            },
                    error: function (error) {
                        console.log(error);
                        $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
                        $("#mensajeError").show();
              }
          });
      });
        })

        //GUARDAMOS LA CREACION O MODIFICACION DEL ESTADO
        function Guardar() {
            if (!$("#formEstado").valid()) {
                return;
            }
            var Estado = {
                IdEstado: $("#txtIdEstado").val(),
                EstadoActual: $("#txtEstadoActual").val(),
                Estatus: $("#cbEstatus").val() == 1 ? true : false,
            };
            // Validar campos requeridos
            if (!Estado.EstadoActual) {
                $("#mensajeError").text("Por favor completa todos los campos requeridos.");
                $("#mensajeError").show();
                return;
            }

                jQuery.ajax({
        url: '@Url.Action("GuardarEstado", "Mantenimientos")',
        type: "POST",
        data: JSON.stringify({ obj: Estado }),
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            $(".modal-body").LoadingOverlay("hide");
            if (Estado.IdEstado == 0) { // Nueva creación
                if (data.resultado != 0) {
                    Estado.IdEstado = data.resultado;
                    tabladata.row.add(Estado).draw(false);
                    $("#FormModal").modal("hide"); // Cerrar modal al agregar
                } else {
                    $("#mensajeError").text(data.mensaje);
                    $("#mensajeError").show();
                }
            } else { // Modificación
                if (data.resultado) {
                    tabladata.row(filaSeleccionada).data(Estado).draw(false);
                    $("#FormModal").modal("hide"); // Cerrar modal al modificar
                } else {
                    $("#mensajeError").text(data.mensaje);
                    $("#mensajeError").show();
                }
            }
        },
        error: function (error) {
            //console.log(error); // Agrega esto para depuración
            $(".modal-body").LoadingOverlay("hide")
            $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
            $("#mensajeError").show();
        },
        beforeSend: function () {
            $(".modal-body").LoadingOverlay("show", {
                imageResizeFactor: 2,
                text: "Cargando...",
                size: 14,
            })
        }
        });
    //$("#FormModal").modal("hide");
}
    </script>
} 