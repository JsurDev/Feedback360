
@{
    ViewBag.Title = "Clientes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Cliente</a></li>
    <li class="breadcrumb-item active">Cliente</li>
</ol>
<div class="card">
    <div class="card-header">
        <i class="fa fa-address-book" aria-hidden="true"></i>
    </div>
    <div class="card-body">
        <div class="row">
            @*onclick="descargarExcel()*@
            <div class="d-flex justify-content-start gap-3">
                <button type="button" class="btn btn-success" onclick="abrirModal()">Crear Nuevo</button>
                <button type="button" class="btn btn-success" onclick="descargarExcel()">Descargar Excel</button>
            </div>
        </div>
        <hr /> @*Linea divisoria*@
        <table id="tCliente" class="display cell-border" style="width:100%">
            @*Inicia la tabla*@
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Telefono</th>
                    <th class="auto-width">Email</th>
                    <th>Contraseña</th>
                    <th>Estado</th>
                    <th>Restablecer</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table> @*Termina la tabla*@
    </div>
</div>
@*Modal para crear un nuevo cliente*@
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel"> Cliente </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!---->
            <div class="modal-body">
                <input id="txtid" type="hidden" value="0" /> @*usuario en CERO para nuevo perfiles*@
                <form id="formClientes">
                    <div class="row g-2">
                        <div class="col-6">
                            <label for="lblIdCliente" class="form-label">Id </label>
                            <input type="text" class="form-control" id="txtIdCliente" style="background-color: #f0f0f0; border: 1px solid #ccc; color: #6c757d;" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblNombres" class="form-label">Nombres</label>
                            <input type="text" class="form-control" id="txtNombres" placeholder="Digite un Nombre" name="nombre" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblApellidos" class="form-label">Apellidos</label>
                            <input type="text" class="form-control" id="txtApellidos" placeholder="Digite un Apellido" name="apellido" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblTelefono" class="form-label">Telefono</label>
                            <input type="text" class="form-control" id="txtTelefono" placeholder="Ej: 22222222" name="numTelefono" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEmail" class="form-label">Correo Electronico</label>
                            <input type="text" class="form-control" id="txtEmail" placeholder="correo@ejemplo.com" required name="correo" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblPassword" class="form-label">Contraseña</label>
                            <input type="password" class="form-control" id="txtPassword" placeholder="******" name="password" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEstatus" class="form-label">Estado</label>
                            <select id="cbEstatus" class="form-select">
                                <option selected>Selecciona una Opcion</option>
                                <option value="1">Activo</option>
                                <option value="0">Inactivo</option>
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <label for="lblRestablecer" class="form-label">Restablecer</label>
                            <select id="cboRestablecer" class="form-select">
                                <option selected>Selecciona una Opcion</option>
                                <option value="1">Si</option>
                                <option value="0">No</option>
                            </select>
                        </div>
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeError" class="alert alert-danger" role="alert" style="display: none;">
                                    Alerta!
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script> @*Para que funcione la descarga del Excel*@

    <script>

        function descargarExcel() {
            var wb = XLSX.utils.table_to_book(document.getElementById('tCliente'), { sheet: "Clientes" });  // Convierte la tabla HTML a libro de Excel
            let fecha = new Date();
            let fechaFormateada = fecha.getFullYear() +
                ('0' + (fecha.getMonth() + 1)).slice(-2) +
                ('0' + fecha.getDate()).slice(-2) +
                '_' +
                ('0' + fecha.getHours()).slice(-2) +
                ('0' + fecha.getMinutes()).slice(-2) +
                ('0' + fecha.getSeconds()).slice(-2);
        //Descargar la tabla sin formato Y solo Descarga los datos mostrados , no todos los datos que recupera el SP
            XLSX.writeFile(wb, 'Clientes_' + fechaFormateada + '.xlsx');  // Descarga el archivo Excel con el nombre 'Clientes_yyyyMMdd_HHmmss.xlsx'  
        }



    var filaSeleccionada;
    tabladata = $("#tCliente").DataTable({
    responsive: true,
    ordering: false,
    "ajax": {
       url: '@Url.Action("ListarClientes", "Home")',
       type: "GET",
       dataType: "json"
    },
    "columns": [
        { "data":"IdCliente"},
        { "data": "Nombre" },
        { "data": "Apellido" },
        { "data": "Telefono" },
        { "data": "Email" },
        {
            "data": "Password",
            "render": function (data, type, row, meta) {
                return "*****";
            }
        },
        {
            "data": "Estatus", "render": function (valor)
            {
                if (valor)
                {
                    return '<span class="badge bg-success">Activo</span>'
                } else
                {
                    return '<span class="badge bg-danger">Inactivo</span>'
                }
            }
        },
        {//en esta parte redefinimos el estado
            "data": "Restablecer", "render": function (valor) {
                if (valor) {
                    return '<span class="badge bg-success">Si</span>'
                } else {
                    return '<span class="badge bg-danger">No</span>'
                }
            }
        },
        {
            "defaultContent":
                '<button type="button" class="btn btn-outline-success btn-sm btn-editar"><i class="fas fa-marker"></i></button>' + ' ' +
                '<button type="button" class="btn btn-outline-danger  btn-sm sm-2 btn-eliminar"> <i class="fas fa-trash"> </i></button>',
            "orderable": false, //no se puede buscar aqui , ni se puede ordenar por que son bontones.
            "searchable": false,
            "width": "57px"
        },
    ],
     "language": {
        "url": "https://cdn.datatables.net/plug-ins/2.2.2/i18n/es-ES.json"
    }
    });

        //VALIDACIONES DE CAMPOS
        // Agregando método personalizado para regex
        $.validator.addMethod("soloLetras", function (value, element) {
            return /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/.test(value);  // Regex para aceptar solo Letras
        }, "Nombre/Apellido invalido, ingrese solo letras.");

        //VALIDAMOS QUE SEA UN NUMERO SALVADOREÑO
        $.validator.addMethod("telefonoSV", function (value, element) {
            return /^[267]\d{7}$/.test(value);  // Validación para números salvadoreños
        }, "Ingrese un número válido de 8 dígitos que comience con 2, 6 o 7.");

        //VALIDAMOS QUE EL CORREO SEA VALIDO
        $.validator.addMethod("correoValido", function (value, element) {
            return /^[^@@]+@@[^@@]+\.[^@@]+$/.test(value);
        }, "Ingrese un correo electrónico válido."); // puse doble @@ por que de lo contrario se interpreta como codigo HTML o Razor.

        //VALIDAMOS QUE LA CONTRASEÑA SEA FUERTE
        $.validator.addMethod("passwordSegura", function (value, element) {
            return /^(?=.*\d)(?=.*[!@@#$%^&*(),.?":{}|<>])(?=.*[A-Za-z])[A-Za-z\d!@@#$%^&*(),.?":{}|<>]{6,20}$/.test(value);  // Contraseña segura
        }, "La contraseña debe tener al menos 1 número, 1 carácter especial, 1 letra y no ser mayor a 20 caracteres.");

        // Validación del formulario
        $("#formClientes").validate({
            rules: {
                nombre: {
                    required: true,
                    soloLetras: true
                },
                apellido: {
                    required: true,
                    soloLetras: true
                },
                numTelefono: {
                    required: true,
                    telefonoSV: true
                },
                correo: {
                    required: true,
                    correoValido: true
                },
                password: {
                    required: true,
                    passwordSegura: true
                }
            },
            errorElement: "div",
            errorLabelContainer: ".alert-danger"
        }); // Terminamos toda la validación

    //FUNCION PARA ABRIR EL MODAL
    function abrirModal(jsonData) {
    $("#txtIdCliente").val("");
    $("#txtNombres").val("");
    $("#txtApellidos").val("");
    $("#txtTelefono").val("");
    $("#txtEmail").val("");
    $("#txtPassword").val("");
    $("#cbEstatus").val(1);
    $("#cboRestablecer").val(1);
    $("#mensajeError").hide();
    if (jsonData != null) {
    $("#txtIdCliente").val(jsonData.IdCliente)
    $("#txtNombres").val(jsonData.Nombre)
    $("#txtApellidos").val(jsonData.Apellido)
    $("#txtTelefono").val(jsonData.Telefono)
    $("#txtEmail").val(jsonData.Email)
    $("#txtPassword").val(jsonData.Password)
    $("#cbEstatus").val(jsonData.Estatus == true ? 1 : 0)
    $("#cboRestablecer").val(jsonData.Restablecer == true ? 1 : 0)
    }
    $("#FormModal").modal("show");
    }

    //Mantenimiento
    //botone editar
    //$("#tCliente tbody").on("click", ".btn-editar", function () {
    //filaSeleccionada = $(this).closest("tr")
    //var data = tabladata.row(filaSeleccionada).data();
    //abrirModal(data)
        //})

        $("#tCliente tbody").on("click", ".btn-editar", function () {
            filaSeleccionada = $(this).closest("tr"); // obtenemos la fila seleccionada

            // si es una fila 'child', obtener la real (la que tiene los datos)
            if (filaSeleccionada.hasClass("child")) {
                filaSeleccionada = filaSeleccionada.prev();
            }

            var data = tabladata.row(filaSeleccionada).data();
            abrirModal(data);
        });


    //Boton eliminar
    $("#tCliente tbody").on("click", ".btn-eliminar", function () {
    var clienteSeleccionado = $(this).closest("tr")
    var data = tabladata.row(clienteSeleccionado).data();
    //pagamos sweet alert
    swal({
    title: "Quieres eliminar el registro?",
    text: "No lo podras recuperar!",
    type: "warning",
    showCancelButton: true,
    confirmButtonClass: "btn-danger",
    confirmButtonText: "Si,eliminalo!",
    closeOnConfirm: false
    },

    function () {
    jQuery.ajax({
    url: '@Url.Action("EliminarCliente", "Home")',
    type: "POST",
    data: JSON.stringify({ id: data.IdCliente }),
    dataType: "json",
    contentType: "application/json; charset=utf-8",
    success: function (data)
    {
    if (data.resultado) {
    tabladata.row(clienteSeleccionado).remove().draw();
    swal("Registro Borrado","El Cliente fue eliminado con exito","success");
    } else {
    swal("Registro no se puede eliminar",data.mensaje,"error");
    }
    },
    error: function (error) {
    console.log(error);
    $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
    $("#mensajeError").show();
    }
    });
    });
    })

        function Guardar() {
            if (!$("#formClientes").valid()) {
                return;
            }
            var Cliente = {
                IdCliente: $("#txtIdCliente").val(),
                Nombre: $("#txtNombres").val(),
                Apellido: $("#txtApellidos").val(),
                Telefono: $("#txtTelefono").val(),
                Email: $("#txtEmail").val(),
                Password: $("#txtPassword").val(),
                Estatus: $("#cbEstatus").val() == 1 ? true : false,
                Restablecer: $("#cboRestablecer").val() == 1 ? true : false,
            };


    // Validar campos requeridos
    if (!Cliente.Nombre || !Cliente.Apellido || !Cliente.Email) {
    $("#mensajeError").text("Por favor completa todos los campos requeridos.");
    $("#mensajeError").show();
    return;
    }

    jQuery.ajax({
    url: '@Url.Action("GuardarCliente", "Home")',
    type: "POST",
    data: JSON.stringify({ obj: Cliente }),
    dataType: "json",
    contentType: "application/json; charset=utf-8",
    success: function (data) {
    $(".modal-body").LoadingOverlay("hide");
    if (Cliente.IdCliente == 0) { // Nueva creación
    if (data.resultado != 0) {
    Cliente.IdCliente = data.resultado;
    tabladata.row.add(Cliente).draw(false);
    $("#FormModal").modal("hide"); // Cerrar modal al agregar
    } else {
    $("#mensajeError").text(data.mensaje);
    $("#mensajeError").show();
    }
    } else { // Modificación
    if (data.resultado) {
    tabladata.row(filaSeleccionada).data(Cliente).draw(false);
    $("#FormModal").modal("hide"); // Cerrar modal al modificar
    } else {
    $("#mensajeError").text(data.mensaje);
    $("#mensajeError").show();
    }
    }
    },
    error: function (error) {
    //console.log(error); // Agrega esto para depuración
    $(".modal-body").LoadingOverlay("hide")
    $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
    $("#mensajeError").show();
    },
    beforeSend: function () {
    $(".modal-body").LoadingOverlay("show", {
    imageResizeFactor: 2,
    text: "Cargando...",
    size: 14,
    })
    }
    });
    //$("#FormModal").modal("hide");
    }
    </script>
}