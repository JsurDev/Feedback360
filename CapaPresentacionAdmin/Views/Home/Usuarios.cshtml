
@{
    ViewBag.Title = "Usuarios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="index.html">Resultado</a></li>
    <li class="breadcrumb-item active">Usuarios</li>
</ol>
<div class="card">
    <div class="card-header">
        <il class="fas fa-users me-1"></il>
    </div>

    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <button type="button" class="btn btn-success" onclick="abrirModal()">Crear Nuevo</button>
                <button type="button" class="btn btn-success" onclick="descargarExcel()">Descargar Excel</button>

            </div>
        </div>
        <hr /> @*Linea divisoria*@

        <table id="tUser" class="display cell-border" style="width:100%">
            @*Inicia la tabla*@
            <thead>
                <tr>
                    <th>Id User</th>
                    <th>Nombre</th>
                    <th>Apellido</th>
                    <th>Puesto</th>
                    <th>Telefono</th>
                    <th>Email</th>
                    <th>Contraseña</th>
                    <th>Estado</th>
                    <th>Restablecer</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table> @*Termina la tabla*@
    </div>
</div>
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel"> USUARIO </h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input id="txtid" type="hidden" value="0" /> @*usuario en CERO para nuevo perfiles*@
                <form id="formUsuarios">
                    <div class="row g-2">

                        <div class="col-6">
                            <label for="lblIdUsuario" class="form-label">IdUsuario</label>
                            <input type="text" class="form-control" id="txtIdUsuario" style="background-color: #f0f0f0; border: 1px solid #ccc; color: #6c757d;" readonly />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblNombres" class="form-label">Nombres</label>
                            <input type="text" class="form-control" id="txtNombres" placeholder="Ingrese un Nombre" name="nombre" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblApellidos" class="form-label">Apellidos</label>
                            <input type="text" class="form-control" id="txtApellidos" placeholder="Ingrese un Apellido" name="apellido" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblPuesto" class="form-label">Puesto</label>
                            <select id="cboPuesto" class="form-select"></select>
                        </div>
                        <div class="col-sm-6">
                            <label for="lblTelefono" class="form-label">Telefono</label>
                            <input type="text" class="form-control" id="txtTelefono" / placeholder="Ej: 22222222" name="numTelefono">
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEmail" class="form-label">Correo Electronico</label>
                            <input type="text" class="form-control" id="txtEmail" placeholder="correo@ejemplo.com" required name="correo" />
                        </div>
                        <div class="col-sm-6">
                            <label for="lblPassword" class="form-label">Contraseña</label>
                            <input type="password" class="form-control" id="txtPassword" placeholder="******" name="password">
                        </div>
                        <div class="col-sm-6">
                            <label for="lblEstatus" class="form-label">Estado</label>
                            <select id="cbEstatus" class="form-select">
                                <option selected>Selecciona una Opcion</option>
                                <option value="1">Activo</option>
                                <option value="0">Inactivo</option>
                            </select>
                        </div>
                        <div class="col-sm-6">
                            <label for="lblRestablecer" class="form-label">Restablecer</label>
                            <select id="cboRestablecer" class="form-select">
                                <option selected>Selecciona una Opcion</option>
                                <option value="1">Si</option>
                                <option value="0">No</option>
                            </select>
                        </div>
                        <div class="row mt-2">
                            <div class="col-12">
                                <div id="mensajeError" class="alert alert-danger" role="alert" style="display: none;">
                                    Alerta!
                                </div>
                            </div>
                        </div>
                    </div>
                </form> @*Termina el FORM*@
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                <button type="button" class="btn btn-primary" onclick="Guardar()">Guardar</button>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        //DESCARGANDO EXCEL DE USUARIOS
        function descargarExcel() {
            window.location.href = '@Url.Action("ExportarUsuariosExcel", "Home")';
        }//termina la funcion de descargar excel

        //var tabladata; //almacenamos nuestro dataTable
        var filaSeleccionada;
        tabladata = $("#tUser").DataTable({
            responsive: true,
            ordering: false,
            "ajax": {
               url: '@Url.Action("ListarUsuarios", "Home")',
               type: "GET",
               dataType: "json"
            },
            "columns": [
                { "data":"IdUsuario"},
                { "data": "Nombre" },
                { "data": "Apellido" },
                { "data": "oPuesto.NombrePuesto" },
                { "data": "Telefono" },
                { "data": "Email" },
                {
                    "data": "Password",
                    "render": function (data, type, row, meta) {
                        return "*****";
                    }
                },
                {
                    "data": "Estatus", "render": function (valor)
                    {
                        if (valor)
                        {
                            return '<span class="badge bg-success">Activo</span>'
                        } else
                        {
                            return '<span class="badge bg-danger">Inactivo</span>'
                        }
                    }
                },
                {//en esta parte redefinimos el estado
                    "data": "Restablecer", "render": function (valor) {
                        if (valor) {
                            return '<span class="badge bg-success">Si</span>'
                        } else {
                            return '<span class="badge bg-danger">No</span>'
                        }
                    }
                },
                {
                    "defaultContent":
                        '<button type="button" class="btn btn-outline-success btn-sm btn-editar"><i class="fas fa-marker"></i></button>' + ' ' +
                        '<button type="button" class="btn btn-outline-danger  btn-sm sm-2 btn-eliminar"> <i class="fas fa-trash"> </i></button>',
                    "orderable": false, //no se puede buscar aqui , ni se puede ordenar por que son bontones.
                    "searchable": false,
                    "width": "57px"
                },

            ],
             "language": {
                "url": "https://cdn.datatables.net/plug-ins/2.2.2/i18n/es-ES.json"
            }
        });

                //LLAMAMOS A LOS PUESTOS
        jQuery.ajax({
        url: '@Url.Action("ListarPuesto", "Home")',
        type: "GET",
        data: null,
        dataType: "json",
        contentType: "application/json; charset=utf-8",
        success: function (data) {
            $("<option>").attr({ "value": "0", "disabled": "true" }).text("Seleccione una opcion ").appendTo("#cboPuesto");
            $.each(data.data, function (index, item) {
                $("<option>").attr({ "value": item.IdPuesto }).text(item.NombrePuesto).appendTo("#cboPuesto");
            })
        },
        error: function (error) {
            console.log(error)
        }
        });


        //VALIDACIONES DE CAMPOS
        // Agregando método personalizado para regex
        $.validator.addMethod("soloLetras", function (value, element) {
            return /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/.test(value);  // Regex para aceptar solo Letras
        }, "Nombre/Apellido invalido, ingrese solo letras.");

        //VALIDAMOS QUE SEA UN NUMERO SALVADOREÑO
        $.validator.addMethod("telefonoSV", function (value, element) {
            return /^[267]\d{7}$/.test(value);  // Validación para números salvadoreños
        }, "Ingrese un número válido de 8 dígitos que comience con 2, 6 o 7.");

        //VALIDAMOS QUE EL CORREO SEA VALIDO
        $.validator.addMethod("correoValido", function (value, element) {
            return /^[^@@]+@@[^@@]+\.[^@@]+$/.test(value);
        }, "Ingrese un correo electrónico válido."); // puse doble @@ por que de lo contrario se interpreta como codigo HTML o Razor.

        //VALIDAMOS QUE LA CONTRASEÑA SEA FUERTE
        $.validator.addMethod("passwordSegura", function (value, element) {
            return /^(?=.*\d)(?=.*[!@@#$%^&*(),.?":{}|<>])(?=.*[A-Za-z])[A-Za-z\d!@@#$%^&*(),.?":{}|<>]{6,20}$/.test(value);  // Contraseña segura
        }, "La contraseña debe tener al menos 1 número, 1 carácter especial, 1 letra y no ser mayor a 20 caracteres.");

        // Validación del formulario
        $("#formUsuarios").validate({
            rules: {
                nombre: {
                    required: true,
                    soloLetras: true
                },
                apellido: {
                    required: true,
                    soloLetras: true
                },
                numTelefono: {
                    required: true,
                    telefonoSV: true
                },
                oPesto: {
                    required: true,
                    soloLetras: true
                },
                correo: {
                    required: true,
                    correoValido: true
                },
                password: {
                    required: true,
                    passwordSegura: true
                }
            },
            errorElement: "div",
            errorLabelContainer: ".alert-danger"
        }); // Terminamos toda la validación

        //FUNCION PARA ABRIR EL MODAL
        function abrirModal(jsonData) {
            $("#txtIdUsuario").val("");
            $("#txtNombres").val("");
            $("#txtApellidos").val("");
            $("#cboPuesto").val($("#cboPuesto option:first").val());
            $("#txtTelefono").val("");
            $("#txtEmail").val("");
            $("#txtPassword").val("");
            $("#cbEstatus").val(1);
            $("#cboRestablecer").val(1);
            $("#mensajeError").hide();
            if (jsonData != null) {
                $("#txtIdUsuario").val(jsonData.IdUsuario)
                $("#txtNombres").val(jsonData.Nombre)
                $("#txtApellidos").val(jsonData.Apellido)
                $("#cboPuesto").val(jsonData.oPuesto.IdPuesto);
                $("#txtTelefono").val(jsonData.Telefono)
                $("#txtEmail").val(jsonData.Email)
                $("#txtPassword").val(jsonData.Password)
                $("#cbEstatus").val(jsonData.Estatus == true ? 1 : 0)
                $("#cboRestablecer").val(jsonData.Restablecer == true ? 1 : 0)
            }
            $("#FormModal").modal("show");
        }

        //Declaramos la variable filaSeleccionada al inicio del script
        var filaSeleccionada = null;
        $("#tUser tbody").on("click", ".btn-editar", function () {
            filaSeleccionada = $(this).closest("tr"); // obtenemos la fila seleccionada

            // si es una fila 'child', obtener la real (la que tiene los datos)
            if (filaSeleccionada.hasClass("child")) {
                filaSeleccionada = filaSeleccionada.prev();
            }

            var data = tabladata.row(filaSeleccionada).data();
            abrirModal(data);
        });

        //boton eliminar
        $("#tUser tbody").on("click", ".btn-eliminar", function () {
            var filaSeleccionada = $(this).closest("tr");
            // Si la fila es una "child" (responsive), se debe apuntar al padre real
            if (filaSeleccionada.hasClass("child")) {
                filaSeleccionada = filaSeleccionada.prev();
            }
            var data = tabladata.row(filaSeleccionada).data();
            //pagamos sweet alert
            swal({
                title: "Quieres eliminar el registro?",
                text: "No lo podras recuperar!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Si,eliminalo!",
                closeOnConfirm: false
            },

            function () {
            jQuery.ajax({
              url: '@Url.Action("EliminarUsuario", "Home")',
                type: "POST",
                data: JSON.stringify({ IdUser: data.IdUsuario }),
              dataType: "json",
              contentType: "application/json; charset=utf-8",
              success: function (data)
              {
                  if (data.resultado) {
                      tabladata.row(filaSeleccionada).remove().draw();
                      swal("Registro Borrado","El usuario fue eliminado con exito","success");
                  } else {
                      swal("Registro no se puede eliminar",data.mensaje,"error");
                  }
              },
                      error: function (error) {
                          console.log(error);
                          $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
                          $("#mensajeError").show();
                }
            });
        });
        })
        function Guardar() {
            if (!$("#formUsuarios").valid()) {
                return;
            }
            var Usuario = {
                IdUsuario:   $("#txtIdUsuario").val(),
                Nombre:      $("#txtNombres").val(),
                Apellido:    $("#txtApellidos").val(),
                oPuesto: {
                    IdPuesto: $("#cboPuesto option:selected").val(),
                    NombrePuesto: $("#cboPuesto option:selected").text(),
                },
                Telefono:    $("#txtTelefono").val(),
                Email:       $("#txtEmail").val(),
                Password:    $("#txtPassword").val(),
                Estatus:     $("#cbEstatus").val() == 1 ? true : false,
                Restablecer: $("#cboRestablecer").val() == 1 ? true : false,
            };

            // Validar campos requeridos
            if (!Usuario.Nombre || !Usuario.Apellido || !Usuario.Email) {
                $("#mensajeError").text("Por favor completa todos los campos requeridos.");
                $("#mensajeError").show();
                return;
            }
            jQuery.ajax({
                url: '@Url.Action("GuardarUsuario", "Home")',
                type: "POST",
                data: JSON.stringify({ obj: Usuario }),
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $(".modal-body").LoadingOverlay("hide");
                    if (Usuario.IdUsuario == 0) { // Nueva creación
                        if (data.resultado != 0) {
                            Usuario.IdUsuario = data.resultado;
                            tabladata.row.add(Usuario).draw(false);
                            $("#FormModal").modal("hide"); // Cerrar modal al agregar
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }
                    } else { // Modificación
                        if (data.resultado) {
                            tabladata.row(filaSeleccionada).data(Usuario).draw(false);
                            $("#FormModal").modal("hide"); // Cerrar modal al modificar
                        } else {
                            $("#mensajeError").text(data.mensaje);
                            $("#mensajeError").show();
                        }
                    }
                },
                error: function (error) {
                    //console.log(error); // Agrega esto para depuración
                    $(".modal-body").LoadingOverlay("hide")
                    $("#mensajeError").text("Ha ocurrido un error al procesar la solicitud.");
                    $("#mensajeError").show();
                },
                beforeSend: function () {
                    $(".modal-body").LoadingOverlay("show", {
                        imageResizeFactor: 2,
                        text: "Cargando...",
                        size: 14,
                    })
                }
                });
            //$("#FormModal").modal("hide");
        }
    </script>
}